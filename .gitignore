# Gaming Player Behavior Analysis & Churn Prediction
# .gitignore file for data science project

# ==============================================================================
# Python
# ==============================================================================
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to comment out the next line.
.idea/

# ==============================================================================
# Data Science & Machine Learning
# ==============================================================================

# Large data files
*.csv
*.tsv
*.json
*.parquet
*.pkl
*.pickle
*.h5
*.hdf5
*.xlsx
*.xls
*.zip
*.tar.gz
*.gz
*.rar

# Model files (large binary files)
models/*.pkl
models/*.joblib
models/*.model
models/*.h5
models/*.pb
models/*.onnx

# Keep model metadata but not large binary files
!models/model_metadata.json
!models/README.md

# Processed data (keep raw data structure but not files)
data/processed/*
data/external/*
data/interim/*
!data/processed/.gitkeep
!data/external/.gitkeep
!data/interim/.gitkeep

# Raw data - allow small sample files, ignore large datasets
data/raw/*.json
data/raw/*.xlsx
data/raw/*.zip
!data/raw/README.md

# Large data files (download separately)
data/raw/steam_games_full.csv

# Keep sample files
!data/raw/steam_games.csv
!data/raw/steam_games_sample.csv
!data/raw/game_recommendations.csv
!data/raw/player_data_synthetic.csv

# Database files
*.db
*.sqlite
*.sqlite3
database/*.db
database/*.sqlite
database/*.sqlite3

# Generated plots and figures
reports/figures/*.png
reports/figures/*.jpg
reports/figures/*.pdf
reports/figures/*.svg
!reports/figures/sample_*.png
!reports/figures/.gitkeep

# Temporary analysis files
temp/
tmp/
scratch/
experiments/
sandbox/

# MLflow artifacts
mlruns/
mlartifacts/

# Weights & Biases
wandb/

# TensorBoard logs
logs/
tensorboard_logs/

# Model checkpoints
checkpoints/
*.ckpt

# ==============================================================================
# Jupyter Notebooks
# ==============================================================================

# Jupyter Notebook checkpoints
.ipynb_checkpoints/

# Jupyter Notebook outputs (optional - uncomment if you want to ignore outputs)
# *.ipynb

# Jupyter Lab settings
.jupyter/

# ==============================================================================
# API Keys & Secrets
# ==============================================================================

# Environment variables and secrets
.env
.env.local
.env.development
.env.test
.env.production
secrets/
config/secrets.py
config/api_keys.py

# Steam API keys
steam_api_key.txt
api_keys.json
credentials.json

# AWS credentials
.aws/

# Google Cloud credentials
*.json
service-account-*.json

# ==============================================================================
# Operating System
# ==============================================================================

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# Linux
*~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

# ==============================================================================
# IDE & Editors
# ==============================================================================

# Visual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~
.netrwhist

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ==============================================================================
# Project Specific
# ==============================================================================

# Generated predictions
predictions/*.csv
predictions/*.json
!predictions/sample_predictions.csv
!predictions/.gitkeep

# Exports
exports/
data/exports/

# Logs
*.log
logs/
log/

# Cache directories
.cache/
cache/

# Performance profiling
*.prof
profile_results/

# Backup files
*.bak
*.backup
*~

# Temporary analysis notebooks
*_temp.ipynb
*_scratch.ipynb
*_test.ipynb

# Local configuration files
config_local.py
local_settings.py

# Docker
.dockerignore

# ==============================================================================
# Documentation Build
# ==============================================================================

# Sphinx
docs/_build/
docs/build/

# MkDocs
site/

# ==============================================================================
# Keep Important Empty Directories
# ==============================================================================

# Keep directory structure with .gitkeep files
!.gitkeep
!data/.gitkeep
!data/raw/.gitkeep
!data/processed/.gitkeep
!data/external/.gitkeep
!data/interim/.gitkeep
!models/.gitkeep
!reports/.gitkeep
!reports/figures/.gitkeep
!predictions/.gitkeep
!logs/.gitkeep

# ==============================================================================
# Exceptions - Files to Always Include
# ==============================================================================

# Always include README files
!README.md
!README.rst
!README.txt

# Include sample/demo files
!**/sample_*
!**/demo_*
!**/example_*

# Include requirements and configuration
!requirements.txt
!requirements-dev.txt
!setup.py
!setup.cfg
!pyproject.toml
!Pipfile
!environment.yml
!conda.yml

# Include important project files
!Makefile
!LICENSE
!CHANGELOG.md
!CONTRIBUTING.md

# Include Docker files
!Dockerfile
!docker-compose.yml
!.dockerignore

# Include CI/CD files
!.github/
!.gitlab-ci.yml
!.travis.yml
!.circleci/

# Include documentation source
!docs/source/
!docs/*.md
!docs/*.rst
